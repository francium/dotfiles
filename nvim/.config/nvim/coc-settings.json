{
    // "coc.preferences.previewAutoClose": false,

    "list.nextKeymap": "<C-n>",
    "list.previousKeymap": "<C-p>",

    // Use quickfix instead of default list view
    "coc.preferences.useQuickfixForLocations": true,

    // Tends to be a bit too slow in larger projects and causes some sluggishness
    "codeLens.enable": false,
    "codeLens.position": "eol",
    "codeLens.separator": "",

    // Can't enable this without losing coc completion in omni complete, but
    // without it get coc warning spam while in insert mode
    "suggest.autoTrigger": "trigger",
    "diagnostic.signOffset": 9999999,
    // You can prefix by a braille whitespace, '⠀' (u+2800) if wanted
    "diagnostic.warningSign": "▷",
    "diagnostic.errorSign": "▶︎",
    "diagnostic.infoSign": "◆",
    "diagnostic.hintSign": "◇",
    "suggest.timeout": 500,
    "suggest.completionItemKindLabels": {
        "keyword": "kw",
        "variable": "var",
        "value": "val",
        "operator": "oper",
        "function": "func",
        "reference": "ref",
        "constant": "cnst",
        "method": "mthd",
        "struct": "strc",
        "class": "clss",
        "interface": "ifce",
        "text": "txt",
        "enum": "enum",
        "enumMember": "enumMbr",
        "module": "module",
        "color": "color",
        "property": "prop",
        "field": "field",
        "unit": "unit",
        "event": "evnt",
        "file": "file",
        "folder": "folder",
        "snippet": "snip",
        "typeParameter": "type",
        "default": "dfult"
    },

    "coc.preferences.formatOnSaveFiletypes": [
        "purescript",
    ],

    // Let coc download language server and use it
    "python.jediEnabled": false,
    "python.venvFolders": ["envs", ".pyenv", ".direnv", "venv", ".venv"],
    "python.terminal.activateEnvironment": true,

    // JavaScript/TypeScript
    // "tsserver.trace.server": "verbose",
    // Relative imports
    // "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.preferences.quoteStyle": "single",
    "typescript.updateImportsOnFileMove.enable": false,

    // C/C++/Obj-C
    "languageserver": {
        "ccls": {
            "command": "ccls",
            "filetypes": ["c", "cpp", "objc", "objcpp"],
            "rootPatterns": [".ccls", "compile_commands.json", ".git/", ".hg/"],
            "initializationOptions": {
                "cache": {
                    "directory": "/tmp/ccls"
                }
            }
        }
    },

    // Purescript (npm i -g purescript-language-server)
    "languageserver": {
        "purescript": {
            "command": "purescript-language-server",
            "args": ["--stdio"],
            "filetypes": ["purescript"],
            "trace.server": "off",
            "rootPatterns": ["bower.json", "psc-package.json", "spago.dhall"],
            "settings": {
                "purescript": {
                    "addSpagoSources": true,
                    "addNpmPath": true // Set to true if using a local purty install for formatting
                    // etc
                }
            }
        },
        "haskell": {
            "command": "haskell-language-server-wrapper",
            "args": ["--lsp"],
            "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
            "filetypes": ["haskell", "lhaskell"]
        }
    },

    "rust-analyzer.inlayHints.refreshOnInsertMode": true,
    "rust-analyzer.trace.server": "verbose",
}
