#!/bin/bash
set -euo pipefail
# Don't set `IFS=$'\n\t'`, because a subshell appears to join multiple lines of
# output into a single space separated line (see the
# `format_staged_markdown_files`'s `FILES` variable and subshell command below)

function format_staged_markdown_files() {
    STAGED=$(git diff --name-only --staged)
    if [ -z "$STAGED" ]; then
        return
    fi

    echo Formatting files...
    FILES=$(echo $STAGED | grep --color=never -e ".md$")

    # Still a few issues remaining before this can be enabled
    # fr-md-format.ts $FILES
}

function commit() {
    git add .
    format_staged_markdown_files
    git add .

    git commit --allow-empty-message -m ""
    if [ $? == 0 ]; then
        git pull origin master
        git push origin master
    fi
}

function open_in_editor() {
    FILE=$1

    pushd . > /dev/null
    cd ~/wiki
    nvim $FILE -c "FZF"
    commit
    popd > /dev/null
}

function commit_changes() {
    pushd . > /dev/null
    cd ~/wiki
    commit
    popd > /dev/null
}

function print_help() {
    echo "Usage: $0 [options] [file]"
    echo
    echo "Options:"
    echo "-h    print help"
    echo "-c    commit changes without editing"
}

# Set terminal title
PROMPT_COMMAND=
echo -en "\033]0;Wiki\a"

FILE=index.md
if [ $# -ge 1 ]; then
    if [ "$1" == "-h" ]; then
        print_help
        exit 0
    elif [ "$1" == "-c" ]; then
        commit_changes
        exit 0
    elif [ ! -z "$1" ]; then
        FILE="$1"
    fi
fi

open_in_editor $FILE
